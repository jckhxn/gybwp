{"version":3,"file":"client.cjs","sources":["../src/client/createClient.ts","../src/client/mapToEditLinks.ts"],"sourcesContent":["import {\n  createClient as createStandardClient,\n  SanityClient,\n} from '@sanity/client'\nimport {\n  createClient as createStegaClient,\n  SanityStegaClient,\n} from '@sanity/client/stega'\n\nimport type { PreviewKitClientConfig } from './types'\n\nexport type * from './types'\nexport type * from '@sanity/client'\n\n/**\n * @deprecated - Please use `createClient` from `@sanity/client/stega` instead\n */\nexport const createClient = (\n  config: PreviewKitClientConfig,\n): SanityClient | SanityStegaClient => {\n  const {\n    encodeSourceMap = detectEnableSourceMap(),\n    encodeSourceMapAtPath,\n    studioUrl = detectStudioUrl(),\n    logger,\n    ...options\n  } = config\n\n  let shouldEncodeSourceMap = encodeSourceMap === true\n\n  // If encodeSourceMap is set to 'auto', then we need to check if we're running on Vercel and on a preview deployment\n  if (encodeSourceMap === 'auto') {\n    shouldEncodeSourceMap = isVercelPreviewEnvironment()\n  }\n\n  if (typeof encodeSourceMap === 'string' && encodeSourceMap !== 'auto') {\n    throw new Error(\n      `Invalid value for encodeSourceMap: ${encodeSourceMap}. Did you mean 'auto'?`,\n    )\n  }\n\n  try {\n    if (shouldEncodeSourceMap && config.resultSourceMap !== false) {\n      if (!studioUrl) {\n        logger?.error?.(\n          '[@sanity/preview-kit]: Content source map enabled client is enabled, but no studioUrl is provided. Falling back to @sanity/client',\n        )\n        return createStandardClient(options)\n      }\n\n      logger?.debug?.(\n        '[@sanity/preview-kit]: Creating source map enabled client',\n      )\n      return createStegaClient({\n        ...options,\n        // Source maps by Content Lake are required in order to know where to insert the encoded source maps into strings\n        resultSourceMap: config.resultSourceMap\n          ? config.resultSourceMap\n          : 'withKeyArraySelector',\n        stega: {\n          enabled: true,\n          studioUrl,\n          logger,\n          filter: encodeSourceMapAtPath\n            ? (props) =>\n                encodeSourceMapAtPath({\n                  path: props.sourcePath,\n                  filterDefault: () => props.filterDefault(props),\n                })\n            : undefined,\n        },\n      })\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\n      '[@sanity/preview-kit]: Error creating client',\n      err,\n      'falling back to non-embedded sourcemap mode',\n    )\n  }\n  return createStandardClient(options)\n}\n\nfunction isVercelPreviewEnvironment() {\n  try {\n    // @ts-expect-error -- VERCEL_ENV is not a declared import.meta.env variable\n    return import.meta.env.VERCEL_ENV === 'preview'\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.VERCEL_ENV === 'preview'\n  } catch {\n    // ignore\n  }\n  return false\n}\n\nfunction detectEnableSourceMap(): PreviewKitClientConfig['encodeSourceMap'] {\n  try {\n    // @ts-expect-error -- SANITY_SOURCE_MAP is not a declared import.meta.env variable\n    return import.meta.env.SANITY_SOURCE_MAP === 'true'\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.SANITY_SOURCE_MAP === 'true'\n  } catch {\n    // ignore\n  }\n  return false\n}\n\n// eslint-disable-next-line consistent-return\nfunction detectStudioUrl() {\n  try {\n    // @ts-expect-error -- SANITY_STUDIO_URL is not a declared import.meta.env variable\n    return import.meta.env.SANITY_STUDIO_URL\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.SANITY_STUDIO_URL\n  } catch {\n    // ignore\n  }\n}\n","import { mapToEditLinks as CSMMapToEditLinks } from '../csm/mapToEditLinks'\nimport type { ContentSourceMapQueryResponse } from './types'\n\n/**\n * @deprecated Please use `resolveEditUrl` from `@sanity/client/csm` instead\n */\nexport function mapToEditLinks(\n  response: ContentSourceMapQueryResponse,\n  studioUrl: string,\n): unknown {\n  return CSMMapToEditLinks(\n    response.result,\n    response.resultSourceMap!,\n    studioUrl,\n  )\n}\n"],"names":["createClient","config","_a","_b","encodeSourceMap","detectEnableSourceMap","encodeSourceMapAtPath","studioUrl","detectStudioUrl","logger","options","shouldEncodeSourceMap","isVercelPreviewEnvironment","Error","concat","resultSourceMap","error","call","createStandardClient","debug","createStegaClient","stega","enabled","filter","props","path","sourcePath","filterDefault","err","console","undefined","VERCEL_ENV","process","env","SANITY_SOURCE_MAP","SANITY_STUDIO_URL","mapToEditLinks","response","CSMMapToEditLinks","result"],"mappings":"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"}