'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var react = require('react');
var jsxRuntime = require('react/jsx-runtime');
const DEFAULT_PARAMS = {};
function createConditionalLiveQuery(options) {
  const {
    ClientComponent
  } = options;
  function ConditionalLiveQuery(props) {
    if (!props.enabled) {
      return props.children;
    }
    const {
      query,
      params = DEFAULT_PARAMS,
      initialData,
      as: LiveComponent
    } = props;
    if (LiveComponent) {
      if (react.Children.count(props.children) > 1) {
        throw new Error("LiveQuery: `as` prop can only be used with a single child");
      }
      if (!react.isValidElement(props.children)) {
        throw new Error("LiveQuery: `as` prop requires a valid `children` prop");
      }
      return /* @__PURE__ */jsxRuntime.jsx(ClientComponent, {
        initialData,
        query,
        params,
        children: /* @__PURE__ */jsxRuntime.jsx(LiveComponent, {
          ...props.children.props
        })
      });
    }
    return /* @__PURE__ */jsxRuntime.jsx(ClientComponent, {
      initialData,
      query,
      params,
      children: props.children
    });
  }
  ConditionalLiveQuery.displayName = "ConditionalLiveQuery";
  return ConditionalLiveQuery;
}
const ClientComponent = react.lazy(() => Promise.resolve().then(function () {
  return require('./_chunks/LiveQueryClientComponent-_9m3kAS-.cjs');
}));
const LiveQuery = createConditionalLiveQuery({
  ClientComponent
});
exports.LiveQuery = LiveQuery;
exports.default = LiveQuery;
//# sourceMappingURL=live-query.cjs.map
